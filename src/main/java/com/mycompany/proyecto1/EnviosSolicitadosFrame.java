/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1;


import static com.mycompany.proyecto1.CotizaciónFrame.generatetablaHtml;
import static com.mycompany.proyecto1.CotizaciónFrame.recibecorreo3Txt;
import static com.mycompany.proyecto1.MenuUsuario.recibecorreoTxt;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author josse
 */
public class EnviosSolicitadosFrame extends javax.swing.JFrame {

    public String NoFactura, CodePaquete, Origen,Destino,NIT2,Nombre,TipoPago,datocorreo,destinatario1,fecha,total;
    public double totalpago;
    public long tamanopaq,numpaquetes;
    public String tamanopaq2,numpaquetes2;
    /**
     * Creates new form EnviosSolicitadosFrame
     */
    public EnviosSolicitadosFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Historial de Envíos");
        recibecorreo4.setVisible(false);
        
        
         datocorreo = recibecorreoTxt.getText();
        
        DefaultTableModel model = new DefaultTableModel(new String[]{"Código de paquete", "Tipo de servicio","Destinatario","Total de envío","Tipo de pago"}, AppState.listaenvios.size()){
            @Override
            public boolean isCellEditable(int row, int column) {
                if(column==5){
                    return true;
                }else{
                    return false;
                }
            }          
         };
        enviosTabla.setModel(model);

        TableModel modelod = enviosTabla.getModel();
        int fila = enviosTabla.getRowCount();
        for (int i = 0; i < AppState.listaenvios.size(); i++) {
            if(datocorreo.equals(AppState.listaenvios.get(i).getCorreoCliente())==true){
                DatosEnvios envios = AppState.listaenvios.get(i);
                modelod.setValueAt(envios.getCodigoPaq(), i, 0);
                modelod.setValueAt(envios.getTipoServicio(), i, 1);
                modelod.setValueAt(envios.getDestinatario(), i, 2);
                modelod.setValueAt(envios.getTotalPago(), i, 3);
                modelod.setValueAt(envios.getTipoPago(), i, 4);
            }
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enviosTabla = new javax.swing.JTable();
        recibecorreo4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        codigpTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel1.setText("Envíos Solicitados");

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setText("REGRESAR AL MENÚ");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 255)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        enviosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código de Paquete", "Tipo de Servicio", "Destinatario", "Total de Envío", "Tipo de Pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enviosTabla);

        jButton2.setBackground(new java.awt.Color(102, 153, 255));
        jButton2.setText("DESCARGAR FACTURA");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 153, 255));
        jButton3.setText("DESCARGAR GUÍA");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Código de Paquete:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(codigpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(recibecorreo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(recibecorreo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MenuUsuario menuus = new MenuUsuario();
        menuus.setVisible(true);
        String datocorreo = recibecorreo4.getText();
        menuus.recibecorreoTxt.setText(datocorreo);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(codigpTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe Ingresar el código de paquete", "Dato Necesario", JOptionPane.WARNING_MESSAGE);
        }else{
            boolean validar = false;
            for (int i = 0; i < AppState.listaenvios.size(); i++) {
                if (codigpTxt.getText().equals(AppState.listaenvios.get(i).getCodigoPaq())==true) {
                    validar = true;
                    break;
                }
            }
            if (validar) {
               for (int i = 0; i < AppState.listaenvios.size(); i++) {
                    if (codigpTxt.getText().equals(AppState.listaenvios.get(i).getCodigoPaq())==true) {
                        NoFactura = AppState.listaenvios.get(i).getNumFactura();
                        CodePaquete = AppState.listaenvios.get(i).getCodigoPaq();
                        Origen = AppState.listaenvios.get(i).getOrigen();
                        Destino = AppState.listaenvios.get(i).getDestino();
                        NIT2= AppState.listaenvios.get(i).getNIT();
                        Nombre = AppState.listaenvios.get(i).getDestinatario();
                        TipoPago = AppState.listaenvios.get(i).getTipoPago();
                        numpaquetes  = AppState.listaenvios.get(i).getNumPaquetes();
                        tamanopaq = AppState.listaenvios.get(i).getTamanoPaquete();
                        totalpago = AppState.listaenvios.get(i).getTotalPago();  
                    }
                 }
                String[][] filas = {{String.valueOf(numpaquetes),String.valueOf(tamanopaq), String.valueOf(totalpago)}};
                String[] Encabezado = {"Número De Paquetes","Tamaño Del Paquete", "Total De Pago"};

                String tablaHtml = generatetablaHtml(NoFactura,CodePaquete,Origen,Destino,NIT2,Nombre,TipoPago,Encabezado, filas);
                        // Crea la carpeta de reportes si no esiste
                File carpeta = new File("C:/Users/josse/Downloads/");
                if (!carpeta.exists()) {
                     carpeta.mkdirs();
                }

                 try {
                    FileWriter fileWriter = new FileWriter("C:/Users/josse/Downloads/FACTURAELECTRÓNICA"+NoFactura+".html");
                    fileWriter.write(tablaHtml);
                    fileWriter.close();
                    JOptionPane.showMessageDialog(null, "FACTURA DESCARGADA CORRECTAMENTE", "Factura Electrónica", JOptionPane.INFORMATION_MESSAGE);
                    codigpTxt.setText(null);
                 } catch (IOException e) {
                    e.printStackTrace();
                }      
            }else  {
                JOptionPane.showMessageDialog(null, "Código de Paquete Inválido", "Error Código Paquete", JOptionPane.ERROR_MESSAGE);
            } 

        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(codigpTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe Ingresar el código de paquete", "Dato Necesario", JOptionPane.WARNING_MESSAGE);
        }else{
            boolean validar = false;
            for (int i = 0; i < AppState.listaenvios.size(); i++) {
                if (codigpTxt.getText().equals(AppState.listaenvios.get(i).getCodigoPaq())==true) {
                    validar = true;
                    break;
                }
            }
            if (validar) {
                for (int i = 0; i < AppState.listaenvios.size(); i++) {
                    if (codigpTxt.getText().equals(AppState.listaenvios.get(i).getCodigoPaq())==true) {
                        CodePaquete = AppState.listaenvios.get(i).getCodigoPaq();
                        Origen = AppState.listaenvios.get(i).getOrigen();
                        Destino = AppState.listaenvios.get(i).getDestino();
                        destinatario1 = AppState.listaenvios.get(i).getDestinatario();
                        TipoPago = AppState.listaenvios.get(i).getTipoPago(); 
                        tamanopaq2 = String.valueOf(AppState.listaenvios.get(i).getTamanoPaquete());
                        numpaquetes2  = String.valueOf(AppState.listaenvios.get(i).getNumPaquetes());
                        fecha = AppState.listaenvios.get(i).getFechaEnvio();
                        total = String.valueOf(AppState.listaenvios.get(i).getTotalPago());
                    }
                }
                String[] Encabezado = {"Número De Paquetes","Tamaño Del Paquete", "Total De Pago"};

                String tablaHtml = generatetablaHtm2(CodePaquete,Origen,Destino,destinatario1,TipoPago,tamanopaq2,numpaquetes2,fecha,total,Encabezado);
                // Crea la carpeta de reportes si no esiste
                File carpeta = new File("C:/Users/josse/Downloads/");
                if (!carpeta.exists()) {
                    carpeta.mkdirs();
                }

                // Escribe el archivo .html dentro de la carpeta
                try {
                    FileWriter fileWriter = new FileWriter("C:/Users/josse/Downloads/GUÍAELECRÓNICA"+CodePaquete+".html");
                    fileWriter.write(tablaHtml);
                    fileWriter.close();
                     JOptionPane.showMessageDialog(null, "GUÍA DESCARGADA CORRECTAMENTE", "Guía Electrónica", JOptionPane.INFORMATION_MESSAGE);
                     codigpTxt.setText(null);
                } catch (IOException e) {
                    e.printStackTrace();
                }   
            }else  {
                JOptionPane.showMessageDialog(null, "Código de Paquete Inválido", "Error Código Paquete", JOptionPane.ERROR_MESSAGE);
            } 
        }  
        
    }//GEN-LAST:event_jButton3ActionPerformed
    public static String generatetablaHtm2(String CodePaquete,String Origen,String Destino,String destinatario1,String TipoPago,String tamanopaq2,String numpaquetes2,String fecha,String total, String[] Encabezado) {
        StringBuilder sb = new StringBuilder();
        //DATOS PERSONALES

        sb.append("<DIV style=\"margin:50px\">");
        sb.append("<font font face=\"monospace\">");
        sb.append("<h3>").append("Código de Paquete: "+CodePaquete).append("</h3>");
        sb.append("<h3>").append("Origen: "+Origen).append("</h3>");
        sb.append("<h3>").append("Destino: "+Destino).append("</h3>");
         sb.append("<h3>").append("Destinatario: "+destinatario1).append("</h3>");
        sb.append("<h3>").append("Tipo de Pago: "+TipoPago).append("</h3>");
        sb.append("<h3>").append("Tamaño del Paquete: "+tamanopaq2+ " lb").append("</h3>");
        sb.append("<h3>").append("Numero de Paquetes: "+numpaquetes2).append("</h3>");
        sb.append("<h3>").append("Fecha de envío: "+fecha).append("</h3>");
        sb.append("<h3>").append("Total a pagar: "+total).append("</h3>");
        sb.append("<img src=\" https://www.seekpng.com/png/full/135-1351144_codigo-de-barras-png-pattern.png \" width=\"650\" height=\"200\">");
        sb.append("</font>");
        sb.append("</DIV>");
 
        return sb.toString();
    }
    public static String generatetablaHtml(String NoFactura,String CodePaquete,String Origen, String Destino, String NIT2,String Nombre, String TipoPago, String[] Encabezado, String[][] filas) {
        StringBuilder sb = new StringBuilder();
        //DATOS PERSONALES

        sb.append("<DIV style=\"margin:50px\">");
        sb.append("<font font face=\"monospace\">");
        sb.append("<h3>").append("No. Factura: "+NoFactura).append("</h3>");
        sb.append("<h3>").append("Código de Paquete: "+CodePaquete).append("</h3>");
        sb.append("<h3>").append("Nombre: "+Nombre).append("</h3>");
        sb.append("<h3>").append("Origen: "+Origen).append("</h3>");
        sb.append("<h3>").append("Destino: "+Destino).append("</h3>");
        sb.append("<h3>").append("NIT: "+NIT2).append("</h3>");
        sb.append("<h3>").append("Tipo de Pago: "+TipoPago).append("</h3>");
        // SE CREA LA TABLA
        sb.append("<table border=\"1\">\n");
        // Se agregan los encabezados de la tabla
        sb.append("<tr>");
        for (String encabezado : Encabezado) {
            sb.append("<th>").append(encabezado).append("</th>");
        }
        sb.append("</tr>\n");

        // Se agregan las fialas a la tabla
        for (String[] fila : filas) {
            sb.append("<tr>");
            for (String casilla : fila) {
                sb.append("<td>").append(casilla).append("</td>");
            }
            sb.append("</tr>\n");
        }
        // Se cierra la etiqueta d ela tabla
        sb.append("</table>\n");
        sb.append("</font>");
        sb.append("</DIV>");
 
        return sb.toString();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnviosSolicitadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnviosSolicitadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnviosSolicitadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnviosSolicitadosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnviosSolicitadosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigpTxt;
    private javax.swing.JTable enviosTabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField recibecorreo4;
    // End of variables declaration//GEN-END:variables
}
